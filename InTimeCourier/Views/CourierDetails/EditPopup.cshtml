
@model InTimeCourier.Models.CourrierMaster

@{
    ViewBag.Title = "Edit Courier Details";
    Layout = null;
}

<h2>Edit Courier Details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CourrierId)
    @Html.HiddenFor(model => model.isInvoiceDone)
    <div class="row">
        <div class="col-md-6 form-group" style="display:none;">
            @Html.LabelFor(model => model.TrackingNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.TrackingNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackingNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("AWB No", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.CNNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("Destination", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @*@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.DestinationId, (IEnumerable<SelectListItem>)ViewBag.DestinationList, "--Please Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("Party Name", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.DropDownListFor(model => model.PartyId, (IEnumerable<SelectListItem>)ViewBag.Party, "Select Party", new { @onchange = "fetchRateDetails()", @class = "form-control", @autofocus = "true" })
                @Html.ValidationMessageFor(model => model.PartyId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            <label class="control-label col-md-5">Mode</label>
            <div class="col-md-7">
                @Html.DropDownListFor(model => model.CourrierModeId, (IEnumerable<SelectListItem>)ViewBag.CourrierMode, "Select Mode", new { @onchange = "fetchRateDetails()", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourrierModeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            <label class="control-label col-md-5">Network</label>
            <div class="col-md-7">
                @Html.DropDownListFor(m => m.NetworkModeId, (IEnumerable<SelectListItem>)ViewBag.Networks, "--Please Select--", new { @class = "form-control", @onchange = "fetchRateDetails()" })
                @Html.ValidationMessageFor(model => model.NetworkModeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("Docket Date", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.DepartureDt, new { htmlAttributes = new { @class = "form-control", @placeholder = "YYYY/MM/DD" } })
                @Html.ValidationMessageFor(model => model.DepartureDt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @type = "number", @onkeyup = "calculateAmount()", @placeholder = "0.000 Kg" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", @type = "number", @onkeyup = "calculateAmount()", @placeholder = "Please enter your Qty" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @type = "number", @onblur = "calculateAmount()", @placeholder = "Please enter your rate(Per / Kg)" } })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.Label("ODA Charges", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ODACharges, new { htmlAttributes = new { @class = "form-control", @type = "number", @onblur = "calculateAmount()", @placeholder = "Please enter your ODA Charges" } })
                @Html.ValidationMessageFor(model => model.ODACharges, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @type = "number", @onblur = "calculateAmount()", @placeholder = "Please enter your Discount" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.HiddenFor(model => model.CreatedDt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group">
            <div class="col-md-offset-10 col-md-12">
                <input type="submit" value="Update" class="btn btn-primary" id="btnSubmit"/>
                <input type="button" value="Delete" class="btn btn-danger" id="btnDelete" />
            </div>
        </div>

    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "CourrierList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function StringToInt(number) {
            if (number == null || number == undefined || number == NaN || number == '') {
                return 0;
            } else {
                return parseFloat(number);
            }
        }
        $(document).ready(function () {
            $("#TrackingNo").attr("readonly", "readonly");
            var d = $('#DepartureDt').val().split(' ')[0];
            $('#DepartureDt').val(d.split("-").reverse().join("/"));
            fetchRateDetails();
        })
        $(function () {
            $("#DepartureDt").datepicker({ dateFormat: 'yy/mm/dd' });
        });
        var changeYear = $("#DepartureDt").datepicker("option", "changeYear");
        // Setter
        $("#txtDate").datepicker({
            showOn: 'button',
            buttonImageOnly: true,
            buttonImage: 'images/calendar.gif',
            dateFormat: 'dd/mm/yy'
        });
        $("#DepartureDt").datepicker("option", "changeYear", true);
        $("#Amount").attr("readonly", "readonly");
        $("#DepartureDt").attr("readonly", "readonly");

    </script>
}
