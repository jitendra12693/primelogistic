@model InTimeCourier.Models.RateMapping

@{
    ViewBag.Title = "Rate Mapping";
}

<h2>Rate Mapping</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (ViewBag.ErrorMsg != null)
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMsg
        </div>
    }
    if (ViewBag.SuccessMsg != null)
    {
        <div class="alert alert-success">
            @ViewBag.SuccessMsg
        </div>
    }
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">
        <div class="row">
            <label class="control-label col-md-2">Party Name</label>
            <div class="col-md-4 form-group">
                @Html.DropDownListFor(model => model.PartyId, (IEnumerable<SelectListItem>)ViewBag.Party, "Select Party Name", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PartyId, "", new { @class = "text-danger" })
            </div>

            <label class="control-label col-md-2">Courrier Mode</label>
            <div class="col-md-4 form-group">
                @Html.DropDownListFor(model => model.ModeId, (IEnumerable<SelectListItem>)ViewBag.CourrierMode, "Select Courrier Mode", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModeId, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2">Network Mode</label>
            <div class="col-md-4 form-group">
                @Html.DropDownListFor(m => m.NetworkModeId, new List<SelectListItem>
                   { new SelectListItem{Text="Trackon", Value="1"},
                     new SelectListItem{Text="DTDC", Value="2"},
                    new SelectListItem{Text="DHL", Value="3"},
                    new SelectListItem{Text="Blue Dart", Value="4"},
                    new SelectListItem{Text="Delhivery", Value="5"}
           }, "Select Network Mode", new { @class = "form-control" })
                @*@Html.DropDownListFor(model => model.ModeId, (IEnumerable<SelectListItem>)ViewBag.CourrierMode, "Select Courrier Mode", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.NetworkModeId, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2">From Weight</label>
            <div class="col-md-4 form-group">
                @Html.EditorFor(model => model.FromWt, new { htmlAttributes = new { @class = "form-control", @type = "number"} })
                @Html.ValidationMessageFor(model => model.FromWt, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2">To Weight</label>
            <div class="col-md-4 form-group">
                @Html.EditorFor(model => model.ToWt, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.ToWt, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2">Rate</label>
            <div class="col-md-4 form-group">
                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2"></label>
            <div class="col-md-4 form-group">
                <button type="submit" value="Save" class="btn btn-warning">Save</button>
            </div>
        </div>
    </div>
    <div>
        @Html.ActionLink("Go to Rate Mapping List", "GetRateMappingList")
    </div>

}
